box:
  id: python:2.7-slim
  ports:
    - "5000"

dev:
  steps:
    - pip-install
    - internal/watch:
        code: python app.py
        reload: true
        
# Build definition
build:
  # The steps that will be executed on build
  steps:
    # A step that executes `pip install` command
    - pip-install

    # A custom script step, name value is used in the UI
    # and the code value contains the command that get executed
    - script:
        name: python unit test
        code: |
          python app_test.py
          
    - internal/docker-build: 
        dockerfile: Dockerfile 
        image-name: wercker-demo-app  # name used to refer to this image until it's pushed   
    - internal/docker-run:
        image: $APP_NAME
        name: demo-app-cicd 
    - internal/docker-kill:
        name: demo-app-cicd

wercker-demo-cicd:
  steps:
    - internal/docker-push:
        username: $CONTAINER_REGISTRY_USERNAME
        password: $API_USER_TOKEN
        tag: latest, $WERCKER_GIT_COMMIT, $WERCKER_GIT_BRANCH
        repository: $TENANCY_NAME/$REPO_NAME/$APP_NAME
        registry: $PRIVATE_REGISTRY_PATH
deploy-to-kubernetes:
  steps:
    - script:
        name: debug
        code: |
          echo $WERCKER_OUTPUT_DIR
          ls -l $WERCKER_OUTPUT_DIR
          echo $WERCKER_ROOT
          ls -l $WERCKER_ROOT
    - bash-template:
        cwd: $WERCKER_ROOT/kubernetes/deployment

    - script:
        name: Remove template files
        cwd: $WERCKER_ROOT/kubernetes/deployment
        code: |
          rm *.template.yaml
    - script:
        name: debug
        cwd: $WERCKER_ROOT/kubernetes/deployment
        code: |
          ls -l
    - script:
        name: echo tags
        code: |
          cat $WERCKER_ROOT/kubernetes/deployment/deployment.yaml
          echo "Docker image and tag:"
          echo "${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}"
    - script:
        name: Export Kubernetes Config
        code: |
          export KUBECONFIG="$WERCKER_ROOT/kubernetes/kube.config"
    - kubectl:
        cwd: $WERCKER_ROOT/kubernetes/deployment
        insecure-skip-tls-verify: true
        command: create namespace wercker-demo
        command: --namespace wercker-demo apply -f .
